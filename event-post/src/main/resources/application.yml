server:
  port: 8080
  error.include-message: always

app:
  event-consumer1:
    host: localhost
    port: 7001
  event-consumer2:
    host: localhost
    port: 7002
logging:
  level:
    root: INFO

spring:
  cloud:
    stream:
      default-binder: kafka
      default:
        contentType: application/json
      bindings:
        # 바인더의 이름은 빈으로 등록된 <메소드이름>-out-<INDEX>로 구성된다
        consumer1-out-0:
          destination: createProduct
          # 제작자 설정. <spring.cloud.stream.bindings.<bindingName>.producer.>로 시작.
          # 상세 옵션 : https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#_producer_properties
          producer:
#            partitionKeyExpression: payload.key
#            partitionCount: 2
            # 필수 전송 그룹. 메시지 전달이 보장되어야 하는 그룹 목록을 지정
            required-groups:
              - consumers
        consumer2-out-0:
          destination: deleteProduct
          producer:
#            partitionKeyExpression: payload.key
#            partitionCount: 2
            required-groups:
              - consumers
      # Kafka 상세 옵션 : https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream-binder-kafka.html#_configuration_options
      kafka:
        binder:
          brokers: 127.0.0.1
          defaultBrokerPort: 9092
  # Spring Boot에서 지원하는 RebbitMQ 설정 : https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#messaging.amqp.rabbitmq
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
management:
  health:
    rabbit:
      enabled: false
